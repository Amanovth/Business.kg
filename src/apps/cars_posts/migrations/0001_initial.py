# Generated by Django 4.2.16 on 2024-10-10 15:05

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid
import versatileimagefield.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('cars', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='CarsPosts',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('is_active', models.BooleanField(default=True, verbose_name='Активный')),
                ('year', models.IntegerField(null=True, verbose_name='Год выпуска')),
                ('engine', models.CharField(choices=[('gas', 'Газ'), ('petrol', 'Бензиновый'), ('electric', 'Электрический'), ('hybrid', 'Гибридный'), ('diesel', 'Дизельный')], max_length=300, null=True, verbose_name='Тип топлива')),
                ('drive', models.CharField(choices=[('awd', 'Полный'), ('part_time_awd', 'Полный подключаемый'), ('rwd', 'Задний'), ('fwd', 'Передний')], max_length=300, null=True, verbose_name='Привод')),
                ('transmission', models.CharField(choices=[('manual', 'Механика'), ('automatic', 'Автомат'), ('robotic', 'Робот'), ('cvt', 'Вариатор')], max_length=300, null=True, verbose_name='Тип КПП')),
                ('steering_wheel', models.CharField(choices=[('left', 'Левый'), ('right', 'Правый')], max_length=300, null=True, verbose_name='Расположения руля')),
                ('video_url', models.URLField(null=True, verbose_name='URL для видео')),
                ('condition', models.CharField(choices=[('good', 'Хорошее'), ('perfect', 'Отличное'), ('salvage', 'Битый'), ('new', 'Новый')], max_length=300, null=True, verbose_name='Состояние')),
                ('mileage', models.IntegerField(null=True, verbose_name='Пробег')),
                ('mileage_unit', models.CharField(choices=[('km', 'Километры'), ('mi', 'Мили')], max_length=300, null=True, verbose_name='Ед. измерения расстоянии')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Текст объявления')),
                ('availability', models.CharField(choices=[('in_stock', 'В наличии'), ('pre_order', 'Предзаказ'), ('in_transit', 'В пути')], max_length=300, null=True, verbose_name='Наличие')),
                ('customs_cleared', models.BooleanField(default=False, verbose_name='Растоможен')),
                ('registration', models.CharField(choices=[('Kyrgyzstan', 'Кыргызстан'), ('Abkhazia', 'Абхазия'), ('Armenia', 'Армения'), ('Kazakhstan', 'Казахстан'), ('Russia', 'Россия'), ('Belarus', 'Беларусь'), ('Another country', 'Другая страна'), ('Not registered', 'Не зарегистрировано')], max_length=300, null=True, verbose_name='Учёт')),
                ('other', models.CharField(choices=[('recently_delivered', 'Свежепригнан'), ('tax_paid', 'Налог уплачен'), ('inspection_passed', 'Технический осмотр пройден'), ('no_investment_required', 'Вложений не требуются')], max_length=300, null=True, verbose_name='Прочее')),
                ('price', models.IntegerField(verbose_name='Цена')),
                ('currency', models.CharField(choices=[('USD', 'Доллар'), ('SOM', 'СОМ')], max_length=300, null=True, verbose_name='Валюта')),
                ('exchange_possibility', models.CharField(choices=[('will_consider_options', 'Рассмотрю варианты'), ('extra_charge_buyer', 'С доплатой от покупателя'), ('extra_charge_seller', 'С доплатой от продавца'), ('no_additional_payments', 'Обмен без доплат'), ('not_interested', 'Не интересует обмен'), ('real_estate_exchange', 'Обмен на недвижимость'), ('only_exchange', 'Только обмен')], max_length=30, null=True, verbose_name='Возможность обмена')),
                ('installment', models.BooleanField(default=False, verbose_name='Возможно рассрочка')),
                ('car_type', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='cars.cartype', verbose_name='Тип')),
                ('color', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='cars.carcolors', verbose_name='Цвет')),
            ],
            options={
                'verbose_name': 'Car post',
                'verbose_name_plural': 'Cars posts',
            },
        ),
        migrations.CreateModel(
            name='Exterior',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('body_kit', models.BooleanField(default=False)),
                ('tinting', models.BooleanField(default=False)),
                ('spoiler', models.BooleanField(default=False)),
                ('alloy_wheel_rims', models.BooleanField(default=False)),
                ('sunroof', models.BooleanField(default=False)),
                ('winch', models.BooleanField(default=False)),
                ('roofrack', models.BooleanField(default=False)),
                ('trunk', models.BooleanField(default=False)),
                ('hitch', models.BooleanField(default=False)),
                ('panoramic_roof', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='GeneralOptions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_power_pack', models.BooleanField(default=False)),
                ('anti_theft_alarm', models.BooleanField(default=False)),
                ('remote_car_starter', models.BooleanField(default=False)),
                ('air_conditioner', models.BooleanField(default=False)),
                ('climate_control_system', models.BooleanField(default=False)),
                ('auto_gas_system', models.BooleanField(default=False)),
                ('cruise_control', models.BooleanField(default=False)),
                ('light_sensor', models.BooleanField(default=False)),
                ('heated_steering_wheel', models.BooleanField(default=False)),
                ('seat_ventilation', models.BooleanField(default=False)),
                ('laser_headlights', models.BooleanField(default=False)),
                ('front_seat_heating', models.BooleanField(default=False)),
                ('all_seat_heating', models.BooleanField(default=False)),
                ('mirror_heating_system', models.BooleanField(default=False)),
                ('xenon_headlights', models.BooleanField(default=False)),
                ('bi_xenon_headlights', models.BooleanField(default=False)),
                ('headlight_washer', models.BooleanField(default=False)),
                ('air_suspension', models.BooleanField(default=False)),
                ('seat_memory', models.BooleanField(default=False)),
                ('steering_wheel_memory', models.BooleanField(default=False)),
                ('rain_sensor', models.BooleanField(default=False)),
                ('onboard_computer', models.BooleanField(default=False)),
                ('headlight_adjustment_system', models.BooleanField(default=False)),
                ('keyless_access', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Interior',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('velour', models.BooleanField(default=False)),
                ('leather', models.BooleanField(default=False)),
                ('window_blinds', models.BooleanField(default=False)),
                ('alcantara', models.BooleanField(default=False)),
                ('combined', models.BooleanField(default=False)),
                ('wood', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Media',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cd', models.BooleanField(default=False)),
                ('dvd', models.BooleanField(default=False)),
                ('mp3', models.BooleanField(default=False)),
                ('usb', models.BooleanField(default=False)),
                ('subwoofer', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Security',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('abs', models.BooleanField(default=False)),
                ('traction_control', models.BooleanField(default=False)),
                ('vehicle_stability_control', models.BooleanField(default=False)),
                ('airbags', models.BooleanField(default=False)),
                ('parking_sensors', models.BooleanField(default=False)),
                ('rear_view_camera', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Pictures',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pictures', versatileimagefield.fields.VersatileImageField(upload_to='car/user/pictures/list/')),
                ('cars', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cars_pictures', to='cars_posts.carsposts')),
            ],
            options={
                'verbose_name': 'Фотография',
                'verbose_name_plural': 'Фотографии',
            },
        ),
        migrations.AddField(
            model_name='carsposts',
            name='exterior',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='cars_posts.exterior'),
        ),
        migrations.AddField(
            model_name='carsposts',
            name='interior',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='cars_posts.interior'),
        ),
        migrations.AddField(
            model_name='carsposts',
            name='likes',
            field=models.ManyToManyField(blank=True, related_name='liked_posts', to=settings.AUTH_USER_MODEL, verbose_name='Понравится'),
        ),
        migrations.AddField(
            model_name='carsposts',
            name='mark',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='cars.carmark', verbose_name='Марка'),
        ),
        migrations.AddField(
            model_name='carsposts',
            name='media',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='cars_posts.media'),
        ),
        migrations.AddField(
            model_name='carsposts',
            name='model',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='cars.carmodel', verbose_name='Модель'),
        ),
        migrations.AddField(
            model_name='carsposts',
            name='modification',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='cars.carmodification', verbose_name='Модификация'),
        ),
        migrations.AddField(
            model_name='carsposts',
            name='options',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='cars_posts.generaloptions'),
        ),
        migrations.AddField(
            model_name='carsposts',
            name='security',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='cars_posts.security'),
        ),
        migrations.AddField(
            model_name='carsposts',
            name='serie',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='cars.carserie', verbose_name='Кузов'),
        ),
        migrations.AddField(
            model_name='carsposts',
            name='user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Пользователь'),
        ),
    ]
